#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <vector>
#include <string>
#include <iostream>
#include <algorithm>

using namespace std;
#define task_name "sorting"

int main() {
    freopen(task_name".out", "w", stdout);

    vector<string> ans;
    ans.push_back("3");
    ans.push_back("S 0 1 1 -> S 0 > 0 > 1 ^");
    ans.push_back("S 0 1 0 -> S 0 > 0 > 0 ^");
    ans.push_back("S 0 1 | -> S 0 > 0 > | ^");
    ans.push_back("S 0 1 _ -> S 0 > 0 > _ ^");
    ans.push_back("S 0 0 1 -> S 0 > 0 > 1 ^");
    ans.push_back("S 0 0 0 -> S 0 > 0 > 0 ^");
    ans.push_back("S 0 0 | -> S 0 > 0 > | ^");
    ans.push_back("S 0 0 _ -> S 0 > 0 > _ ^");
    ans.push_back("S 0 | 1 -> S 0 > 0 > 1 ^");
    ans.push_back("S 0 | 0 -> S 0 > 0 > 0 ^");
    ans.push_back("S 0 | | -> S 0 > 0 > | ^");
    ans.push_back("S 0 | _ -> S 0 > 0 > _ ^");
    ans.push_back("S 0 _ 1 -> S 0 > 0 > 1 ^");
    ans.push_back("S 0 _ 0 -> S 0 > 0 > 0 ^");
    ans.push_back("S 0 _ | -> S 0 > 0 > | ^");
    ans.push_back("S 0 _ _ -> S 0 > 0 > _ ^");
    ans.push_back("S 1 1 1 -> S 1 > 1 > 1 ^");
    ans.push_back("S 1 1 0 -> S 1 > 1 > 0 ^");
    ans.push_back("S 1 1 | -> S 1 > 1 > | ^");
    ans.push_back("S 1 1 _ -> S 1 > 1 > _ ^");
    ans.push_back("S 1 0 1 -> S 1 > 1 > 1 ^");
    ans.push_back("S 1 0 0 -> S 1 > 1 > 0 ^");
    ans.push_back("S 1 0 | -> S 1 > 1 > | ^");
    ans.push_back("S 1 0 _ -> S 1 > 1 > _ ^");
    ans.push_back("S 1 | 1 -> S 1 > 1 > 1 ^");
    ans.push_back("S 1 | 0 -> S 1 > 1 > 0 ^");
    ans.push_back("S 1 | | -> S 1 > 1 > | ^");
    ans.push_back("S 1 | _ -> S 1 > 1 > _ ^");
    ans.push_back("S 1 _ 1 -> S 1 > 1 > 1 ^");
    ans.push_back("S 1 _ 0 -> S 1 > 1 > 0 ^");
    ans.push_back("S 1 _ | -> S 1 > 1 > | ^");
    ans.push_back("S 1 _ _ -> S 1 > 1 > _ ^");
    ans.push_back("S | 1 1 -> ns | > 1 < 1 ^");
    ans.push_back("S | 1 0 -> ns | > 1 < 0 ^");
    ans.push_back("S | 1 | -> ns | > 1 < | ^");
    ans.push_back("S | 1 _ -> ns | > 1 < _ ^");
    ans.push_back("S | 0 1 -> ns | > 0 < 1 ^");
    ans.push_back("S | 0 0 -> ns | > 0 < 0 ^");
    ans.push_back("S | 0 | -> ns | > 0 < | ^");
    ans.push_back("S | 0 _ -> ns | > 0 < _ ^");
    ans.push_back("S | | 1 -> ns | > | < 1 ^");
    ans.push_back("S | | 0 -> ns | > | < 0 ^");
    ans.push_back("S | | | -> ns | > | < | ^");
    ans.push_back("S | | _ -> ns | > | < _ ^");
    ans.push_back("S | _ 1 -> ns | > _ < 1 ^");
    ans.push_back("S | _ 0 -> ns | > _ < 0 ^");
    ans.push_back("S | _ | -> ns | > _ < | ^");
    ans.push_back("S | _ _ -> ns | > _ < _ ^");
    ans.push_back("S _ 1 1 -> end_arr _ < 1 < 1 ^");
    ans.push_back("S _ 1 0 -> end_arr _ < 1 < 0 ^");
    ans.push_back("S _ 1 | -> end_arr _ < 1 < | ^");
    ans.push_back("S _ 1 _ -> end_arr _ < 1 < _ ^");
    ans.push_back("S _ 0 1 -> end_arr _ < 0 < 1 ^");
    ans.push_back("S _ 0 0 -> end_arr _ < 0 < 0 ^");
    ans.push_back("S _ 0 | -> end_arr _ < 0 < | ^");
    ans.push_back("S _ 0 _ -> end_arr _ < 0 < _ ^");
    ans.push_back("S _ | 1 -> end_arr _ < | < 1 ^");
    ans.push_back("S _ | 0 -> end_arr _ < | < 0 ^");
    ans.push_back("S _ | | -> end_arr _ < | < | ^");
    ans.push_back("S _ | _ -> end_arr _ < | < _ ^");
    ans.push_back("S _ _ 1 -> end_arr _ < _ < 1 ^");
    ans.push_back("S _ _ 0 -> end_arr _ < _ < 0 ^");
    ans.push_back("S _ _ | -> end_arr _ < _ < | ^");
    ans.push_back("S _ _ _ -> end_arr _ < _ < _ ^");
    ans.push_back("end_arr 1 0 1 -> end_arr 1 ^ _ < 1 ^");
    ans.push_back("end_arr 1 0 0 -> end_arr 1 ^ _ < 0 ^");
    ans.push_back("end_arr 1 0 | -> end_arr 1 ^ _ < | ^");
    ans.push_back("end_arr 1 0 _ -> end_arr 1 ^ _ < _ ^");
    ans.push_back("end_arr 0 0 1 -> end_arr 0 ^ _ < 1 ^");
    ans.push_back("end_arr 0 0 0 -> end_arr 0 ^ _ < 0 ^");
    ans.push_back("end_arr 0 0 | -> end_arr 0 ^ _ < | ^");
    ans.push_back("end_arr 0 0 _ -> end_arr 0 ^ _ < _ ^");
    ans.push_back("end_arr | 0 1 -> end_arr | ^ _ < 1 ^");
    ans.push_back("end_arr | 0 0 -> end_arr | ^ _ < 0 ^");
    ans.push_back("end_arr | 0 | -> end_arr | ^ _ < | ^");
    ans.push_back("end_arr | 0 _ -> end_arr | ^ _ < _ ^");
    ans.push_back("end_arr _ 0 1 -> end_arr _ ^ _ < 1 ^");
    ans.push_back("end_arr _ 0 0 -> end_arr _ ^ _ < 0 ^");
    ans.push_back("end_arr _ 0 | -> end_arr _ ^ _ < | ^");
    ans.push_back("end_arr _ 0 _ -> end_arr _ ^ _ < _ ^");
    ans.push_back("end_arr 1 1 1 -> end_arr 1 ^ _ < 1 ^");
    ans.push_back("end_arr 1 1 0 -> end_arr 1 ^ _ < 0 ^");
    ans.push_back("end_arr 1 1 | -> end_arr 1 ^ _ < | ^");
    ans.push_back("end_arr 1 1 _ -> end_arr 1 ^ _ < _ ^");
    ans.push_back("end_arr 0 1 1 -> end_arr 0 ^ _ < 1 ^");
    ans.push_back("end_arr 0 1 0 -> end_arr 0 ^ _ < 0 ^");
    ans.push_back("end_arr 0 1 | -> end_arr 0 ^ _ < | ^");
    ans.push_back("end_arr 0 1 _ -> end_arr 0 ^ _ < _ ^");
    ans.push_back("end_arr | 1 1 -> end_arr | ^ _ < 1 ^");
    ans.push_back("end_arr | 1 0 -> end_arr | ^ _ < 0 ^");
    ans.push_back("end_arr | 1 | -> end_arr | ^ _ < | ^");
    ans.push_back("end_arr | 1 _ -> end_arr | ^ _ < _ ^");
    ans.push_back("end_arr _ 1 1 -> end_arr _ ^ _ < 1 ^");
    ans.push_back("end_arr _ 1 0 -> end_arr _ ^ _ < 0 ^");
    ans.push_back("end_arr _ 1 | -> end_arr _ ^ _ < | ^");
    ans.push_back("end_arr _ 1 _ -> end_arr _ ^ _ < _ ^");
    ans.push_back("end_arr 1 _ 1 -> go_begin 1 ^ _ ^ 1 ^");
    ans.push_back("end_arr 1 _ 0 -> go_begin 1 ^ _ ^ 0 ^");
    ans.push_back("end_arr 1 _ | -> go_begin 1 ^ _ ^ | ^");
    ans.push_back("end_arr 1 _ _ -> go_begin 1 ^ _ ^ _ ^");
    ans.push_back("end_arr 0 _ 1 -> go_begin 0 ^ _ ^ 1 ^");
    ans.push_back("end_arr 0 _ 0 -> go_begin 0 ^ _ ^ 0 ^");
    ans.push_back("end_arr 0 _ | -> go_begin 0 ^ _ ^ | ^");
    ans.push_back("end_arr 0 _ _ -> go_begin 0 ^ _ ^ _ ^");
    ans.push_back("end_arr | _ 1 -> go_begin | ^ _ ^ 1 ^");
    ans.push_back("end_arr | _ 0 -> go_begin | ^ _ ^ 0 ^");
    ans.push_back("end_arr | _ | -> go_begin | ^ _ ^ | ^");
    ans.push_back("end_arr | _ _ -> go_begin | ^ _ ^ _ ^");
    ans.push_back("end_arr _ _ 1 -> go_begin _ ^ _ ^ 1 ^");
    ans.push_back("end_arr _ _ 0 -> go_begin _ ^ _ ^ 0 ^");
    ans.push_back("end_arr _ _ | -> go_begin _ ^ _ ^ | ^");
    ans.push_back("end_arr _ _ _ -> go_begin _ ^ _ ^ _ ^");
    ans.push_back("go_begin 1 1 1 -> go_begin 1 < 1 ^ 1 ^");
    ans.push_back("go_begin 1 1 0 -> go_begin 1 < 1 ^ 0 ^");
    ans.push_back("go_begin 1 1 | -> go_begin 1 < 1 ^ | ^");
    ans.push_back("go_begin 1 1 _ -> go_begin 1 < 1 ^ _ ^");
    ans.push_back("go_begin 1 0 1 -> go_begin 1 < 0 ^ 1 ^");
    ans.push_back("go_begin 1 0 0 -> go_begin 1 < 0 ^ 0 ^");
    ans.push_back("go_begin 1 0 | -> go_begin 1 < 0 ^ | ^");
    ans.push_back("go_begin 1 0 _ -> go_begin 1 < 0 ^ _ ^");
    ans.push_back("go_begin 1 | 1 -> go_begin 1 < | ^ 1 ^");
    ans.push_back("go_begin 1 | 0 -> go_begin 1 < | ^ 0 ^");
    ans.push_back("go_begin 1 | | -> go_begin 1 < | ^ | ^");
    ans.push_back("go_begin 1 | _ -> go_begin 1 < | ^ _ ^");
    ans.push_back("go_begin 1 _ 1 -> go_begin 1 < _ ^ 1 ^");
    ans.push_back("go_begin 1 _ 0 -> go_begin 1 < _ ^ 0 ^");
    ans.push_back("go_begin 1 _ | -> go_begin 1 < _ ^ | ^");
    ans.push_back("go_begin 1 _ _ -> go_begin 1 < _ ^ _ ^");
    ans.push_back("go_begin 0 1 1 -> go_begin 0 < 1 ^ 1 ^");
    ans.push_back("go_begin 0 1 0 -> go_begin 0 < 1 ^ 0 ^");
    ans.push_back("go_begin 0 1 | -> go_begin 0 < 1 ^ | ^");
    ans.push_back("go_begin 0 1 _ -> go_begin 0 < 1 ^ _ ^");
    ans.push_back("go_begin 0 0 1 -> go_begin 0 < 0 ^ 1 ^");
    ans.push_back("go_begin 0 0 0 -> go_begin 0 < 0 ^ 0 ^");
    ans.push_back("go_begin 0 0 | -> go_begin 0 < 0 ^ | ^");
    ans.push_back("go_begin 0 0 _ -> go_begin 0 < 0 ^ _ ^");
    ans.push_back("go_begin 0 | 1 -> go_begin 0 < | ^ 1 ^");
    ans.push_back("go_begin 0 | 0 -> go_begin 0 < | ^ 0 ^");
    ans.push_back("go_begin 0 | | -> go_begin 0 < | ^ | ^");
    ans.push_back("go_begin 0 | _ -> go_begin 0 < | ^ _ ^");
    ans.push_back("go_begin 0 _ 1 -> go_begin 0 < _ ^ 1 ^");
    ans.push_back("go_begin 0 _ 0 -> go_begin 0 < _ ^ 0 ^");
    ans.push_back("go_begin 0 _ | -> go_begin 0 < _ ^ | ^");
    ans.push_back("go_begin 0 _ _ -> go_begin 0 < _ ^ _ ^");
    ans.push_back("go_begin | 1 1 -> go_begin | < 1 ^ 1 ^");
    ans.push_back("go_begin | 1 0 -> go_begin | < 1 ^ 0 ^");
    ans.push_back("go_begin | 1 | -> go_begin | < 1 ^ | ^");
    ans.push_back("go_begin | 1 _ -> go_begin | < 1 ^ _ ^");
    ans.push_back("go_begin | 0 1 -> go_begin | < 0 ^ 1 ^");
    ans.push_back("go_begin | 0 0 -> go_begin | < 0 ^ 0 ^");
    ans.push_back("go_begin | 0 | -> go_begin | < 0 ^ | ^");
    ans.push_back("go_begin | 0 _ -> go_begin | < 0 ^ _ ^");
    ans.push_back("go_begin | | 1 -> go_begin | < | ^ 1 ^");
    ans.push_back("go_begin | | 0 -> go_begin | < | ^ 0 ^");
    ans.push_back("go_begin | | | -> go_begin | < | ^ | ^");
    ans.push_back("go_begin | | _ -> go_begin | < | ^ _ ^");
    ans.push_back("go_begin | _ 1 -> go_begin | < _ ^ 1 ^");
    ans.push_back("go_begin | _ 0 -> go_begin | < _ ^ 0 ^");
    ans.push_back("go_begin | _ | -> go_begin | < _ ^ | ^");
    ans.push_back("go_begin | _ _ -> go_begin | < _ ^ _ ^");
    ans.push_back("go_begin _ 1 1 -> AC _ > 1 ^ 1 ^");
    ans.push_back("go_begin _ 1 0 -> AC _ > 1 ^ 0 ^");
    ans.push_back("go_begin _ 1 | -> AC _ > 1 ^ | ^");
    ans.push_back("go_begin _ 1 _ -> AC _ > 1 ^ _ ^");
    ans.push_back("go_begin _ 0 1 -> AC _ > 0 ^ 1 ^");
    ans.push_back("go_begin _ 0 0 -> AC _ > 0 ^ 0 ^");
    ans.push_back("go_begin _ 0 | -> AC _ > 0 ^ | ^");
    ans.push_back("go_begin _ 0 _ -> AC _ > 0 ^ _ ^");
    ans.push_back("go_begin _ | 1 -> AC _ > | ^ 1 ^");
    ans.push_back("go_begin _ | 0 -> AC _ > | ^ 0 ^");
    ans.push_back("go_begin _ | | -> AC _ > | ^ | ^");
    ans.push_back("go_begin _ | _ -> AC _ > | ^ _ ^");
    ans.push_back("go_begin _ _ 1 -> AC _ > _ ^ 1 ^");
    ans.push_back("go_begin _ _ 0 -> AC _ > _ ^ 0 ^");
    ans.push_back("go_begin _ _ | -> AC _ > _ ^ | ^");
    ans.push_back("go_begin _ _ _ -> AC _ > _ ^ _ ^");
    ans.push_back("ns 0 1 1 -> ns 0 > 1 ^ 0 >");
    ans.push_back("ns 0 1 0 -> ns 0 > 1 ^ 0 >");
    ans.push_back("ns 0 1 | -> ns 0 > 1 ^ 0 >");
    ans.push_back("ns 0 1 _ -> ns 0 > 1 ^ 0 >");
    ans.push_back("ns 0 0 1 -> ns 0 > 0 ^ 0 >");
    ans.push_back("ns 0 0 0 -> ns 0 > 0 ^ 0 >");
    ans.push_back("ns 0 0 | -> ns 0 > 0 ^ 0 >");
    ans.push_back("ns 0 0 _ -> ns 0 > 0 ^ 0 >");
    ans.push_back("ns 0 | 1 -> ns 0 > | ^ 0 >");
    ans.push_back("ns 0 | 0 -> ns 0 > | ^ 0 >");
    ans.push_back("ns 0 | | -> ns 0 > | ^ 0 >");
    ans.push_back("ns 0 | _ -> ns 0 > | ^ 0 >");
    ans.push_back("ns 0 _ 1 -> ns 0 > _ ^ 0 >");
    ans.push_back("ns 0 _ 0 -> ns 0 > _ ^ 0 >");
    ans.push_back("ns 0 _ | -> ns 0 > _ ^ 0 >");
    ans.push_back("ns 0 _ _ -> ns 0 > _ ^ 0 >");
    ans.push_back("ns 1 1 1 -> ns 1 > 1 ^ 1 >");
    ans.push_back("ns 1 1 0 -> ns 1 > 1 ^ 1 >");
    ans.push_back("ns 1 1 | -> ns 1 > 1 ^ 1 >");
    ans.push_back("ns 1 1 _ -> ns 1 > 1 ^ 1 >");
    ans.push_back("ns 1 0 1 -> ns 1 > 0 ^ 1 >");
    ans.push_back("ns 1 0 0 -> ns 1 > 0 ^ 1 >");
    ans.push_back("ns 1 0 | -> ns 1 > 0 ^ 1 >");
    ans.push_back("ns 1 0 _ -> ns 1 > 0 ^ 1 >");
    ans.push_back("ns 1 | 1 -> ns 1 > | ^ 1 >");
    ans.push_back("ns 1 | 0 -> ns 1 > | ^ 1 >");
    ans.push_back("ns 1 | | -> ns 1 > | ^ 1 >");
    ans.push_back("ns 1 | _ -> ns 1 > | ^ 1 >");
    ans.push_back("ns 1 _ 1 -> ns 1 > _ ^ 1 >");
    ans.push_back("ns 1 _ 0 -> ns 1 > _ ^ 1 >");
    ans.push_back("ns 1 _ | -> ns 1 > _ ^ 1 >");
    ans.push_back("ns 1 _ _ -> ns 1 > _ ^ 1 >");
    ans.push_back("ns _ 1 1 -> to_left_a _ < 1 ^ 1 <");
    ans.push_back("ns _ 1 0 -> to_left_a _ < 1 ^ 0 <");
    ans.push_back("ns _ 1 | -> to_left_a _ < 1 ^ | <");
    ans.push_back("ns _ 1 _ -> to_left_a _ < 1 ^ _ <");
    ans.push_back("ns _ 0 1 -> to_left_a _ < 0 ^ 1 <");
    ans.push_back("ns _ 0 0 -> to_left_a _ < 0 ^ 0 <");
    ans.push_back("ns _ 0 | -> to_left_a _ < 0 ^ | <");
    ans.push_back("ns _ 0 _ -> to_left_a _ < 0 ^ _ <");
    ans.push_back("ns _ | 1 -> to_left_a _ < | ^ 1 <");
    ans.push_back("ns _ | 0 -> to_left_a _ < | ^ 0 <");
    ans.push_back("ns _ | | -> to_left_a _ < | ^ | <");
    ans.push_back("ns _ | _ -> to_left_a _ < | ^ _ <");
    ans.push_back("ns _ _ 1 -> to_left_a _ < _ ^ 1 <");
    ans.push_back("ns _ _ 0 -> to_left_a _ < _ ^ 0 <");
    ans.push_back("ns _ _ | -> to_left_a _ < _ ^ | <");
    ans.push_back("ns _ _ _ -> to_left_a _ < _ ^ _ <");
    ans.push_back("ns | 1 1 -> to_left_a | < 1 ^ 1 <");
    ans.push_back("ns | 1 0 -> to_left_a | < 1 ^ 0 <");
    ans.push_back("ns | 1 | -> to_left_a | < 1 ^ | <");
    ans.push_back("ns | 1 _ -> to_left_a | < 1 ^ _ <");
    ans.push_back("ns | 0 1 -> to_left_a | < 0 ^ 1 <");
    ans.push_back("ns | 0 0 -> to_left_a | < 0 ^ 0 <");
    ans.push_back("ns | 0 | -> to_left_a | < 0 ^ | <");
    ans.push_back("ns | 0 _ -> to_left_a | < 0 ^ _ <");
    ans.push_back("ns | | 1 -> to_left_a | < | ^ 1 <");
    ans.push_back("ns | | 0 -> to_left_a | < | ^ 0 <");
    ans.push_back("ns | | | -> to_left_a | < | ^ | <");
    ans.push_back("ns | | _ -> to_left_a | < | ^ _ <");
    ans.push_back("ns | _ 1 -> to_left_a | < _ ^ 1 <");
    ans.push_back("ns | _ 0 -> to_left_a | < _ ^ 0 <");
    ans.push_back("ns | _ | -> to_left_a | < _ ^ | <");
    ans.push_back("ns | _ _ -> to_left_a | < _ ^ _ <");
    ans.push_back("to_left_a 1 1 1 -> to_left_a 1 ^ 1 < 1 <");
    ans.push_back("to_left_a 1 1 0 -> to_left_a 1 ^ 1 < 0 <");
    ans.push_back("to_left_a 1 1 | -> to_left_a 1 ^ 1 < | <");
    ans.push_back("to_left_a 1 1 _ -> to_left_a 1 ^ 1 < _ <");
    ans.push_back("to_left_a 1 0 1 -> to_left_a 1 ^ 0 < 1 <");
    ans.push_back("to_left_a 1 0 0 -> to_left_a 1 ^ 0 < 0 <");
    ans.push_back("to_left_a 1 0 | -> to_left_a 1 ^ 0 < | <");
    ans.push_back("to_left_a 1 0 _ -> to_left_a 1 ^ 0 < _ <");
    ans.push_back("to_left_a 0 1 1 -> to_left_a 0 ^ 1 < 1 <");
    ans.push_back("to_left_a 0 1 0 -> to_left_a 0 ^ 1 < 0 <");
    ans.push_back("to_left_a 0 1 | -> to_left_a 0 ^ 1 < | <");
    ans.push_back("to_left_a 0 1 _ -> to_left_a 0 ^ 1 < _ <");
    ans.push_back("to_left_a 0 0 1 -> to_left_a 0 ^ 0 < 1 <");
    ans.push_back("to_left_a 0 0 0 -> to_left_a 0 ^ 0 < 0 <");
    ans.push_back("to_left_a 0 0 | -> to_left_a 0 ^ 0 < | <");
    ans.push_back("to_left_a 0 0 _ -> to_left_a 0 ^ 0 < _ <");
    ans.push_back("to_left_a | 1 1 -> to_left_a | ^ 1 < 1 <");
    ans.push_back("to_left_a | 1 0 -> to_left_a | ^ 1 < 0 <");
    ans.push_back("to_left_a | 1 | -> to_left_a | ^ 1 < | <");
    ans.push_back("to_left_a | 1 _ -> to_left_a | ^ 1 < _ <");
    ans.push_back("to_left_a | 0 1 -> to_left_a | ^ 0 < 1 <");
    ans.push_back("to_left_a | 0 0 -> to_left_a | ^ 0 < 0 <");
    ans.push_back("to_left_a | 0 | -> to_left_a | ^ 0 < | <");
    ans.push_back("to_left_a | 0 _ -> to_left_a | ^ 0 < _ <");
    ans.push_back("to_left_a _ 1 1 -> to_left_a _ ^ 1 < 1 <");
    ans.push_back("to_left_a _ 1 0 -> to_left_a _ ^ 1 < 0 <");
    ans.push_back("to_left_a _ 1 | -> to_left_a _ ^ 1 < | <");
    ans.push_back("to_left_a _ 1 _ -> to_left_a _ ^ 1 < _ <");
    ans.push_back("to_left_a _ 0 1 -> to_left_a _ ^ 0 < 1 <");
    ans.push_back("to_left_a _ 0 0 -> to_left_a _ ^ 0 < 0 <");
    ans.push_back("to_left_a _ 0 | -> to_left_a _ ^ 0 < | <");
    ans.push_back("to_left_a _ 0 _ -> to_left_a _ ^ 0 < _ <");
    ans.push_back("to_left_a 1 _ 1 -> to_left_b 1 ^ _ > 1 >");
    ans.push_back("to_left_a 1 _ 0 -> to_left_b 1 ^ _ > 0 >");
    ans.push_back("to_left_a 1 _ | -> to_left_b 1 ^ _ > | >");
    ans.push_back("to_left_a 1 _ _ -> to_left_b 1 ^ _ > _ >");
    ans.push_back("to_left_a 0 _ 1 -> to_left_b 0 ^ _ > 1 >");
    ans.push_back("to_left_a 0 _ 0 -> to_left_b 0 ^ _ > 0 >");
    ans.push_back("to_left_a 0 _ | -> to_left_b 0 ^ _ > | >");
    ans.push_back("to_left_a 0 _ _ -> to_left_b 0 ^ _ > _ >");
    ans.push_back("to_left_a | _ 1 -> to_left_b | ^ _ > 1 >");
    ans.push_back("to_left_a | _ 0 -> to_left_b | ^ _ > 0 >");
    ans.push_back("to_left_a | _ | -> to_left_b | ^ _ > | >");
    ans.push_back("to_left_a | _ _ -> to_left_b | ^ _ > _ >");
    ans.push_back("to_left_a _ _ 1 -> to_left_b _ ^ _ > 1 >");
    ans.push_back("to_left_a _ _ 0 -> to_left_b _ ^ _ > 0 >");
    ans.push_back("to_left_a _ _ | -> to_left_b _ ^ _ > | >");
    ans.push_back("to_left_a _ _ _ -> to_left_b _ ^ _ > _ >");
    ans.push_back("to_left_b 1 1 1 -> to_left_b 1 ^ 1 < 1 <");
    ans.push_back("to_left_b 1 1 0 -> to_left_b 1 ^ 1 < 0 <");
    ans.push_back("to_left_b 1 0 1 -> to_left_b 1 ^ 0 < 1 <");
    ans.push_back("to_left_b 1 0 0 -> to_left_b 1 ^ 0 < 0 <");
    ans.push_back("to_left_b 1 | 1 -> to_left_b 1 ^ | < 1 <");
    ans.push_back("to_left_b 1 | 0 -> to_left_b 1 ^ | < 0 <");
    ans.push_back("to_left_b 1 _ 1 -> to_left_b 1 ^ _ < 1 <");
    ans.push_back("to_left_b 1 _ 0 -> to_left_b 1 ^ _ < 0 <");
    ans.push_back("to_left_b 0 1 1 -> to_left_b 0 ^ 1 < 1 <");
    ans.push_back("to_left_b 0 1 0 -> to_left_b 0 ^ 1 < 0 <");
    ans.push_back("to_left_b 0 0 1 -> to_left_b 0 ^ 0 < 1 <");
    ans.push_back("to_left_b 0 0 0 -> to_left_b 0 ^ 0 < 0 <");
    ans.push_back("to_left_b 0 | 1 -> to_left_b 0 ^ | < 1 <");
    ans.push_back("to_left_b 0 | 0 -> to_left_b 0 ^ | < 0 <");
    ans.push_back("to_left_b 0 _ 1 -> to_left_b 0 ^ _ < 1 <");
    ans.push_back("to_left_b 0 _ 0 -> to_left_b 0 ^ _ < 0 <");
    ans.push_back("to_left_b | 1 1 -> to_left_b | ^ 1 < 1 <");
    ans.push_back("to_left_b | 1 0 -> to_left_b | ^ 1 < 0 <");
    ans.push_back("to_left_b | 0 1 -> to_left_b | ^ 0 < 1 <");
    ans.push_back("to_left_b | 0 0 -> to_left_b | ^ 0 < 0 <");
    ans.push_back("to_left_b | | 1 -> to_left_b | ^ | < 1 <");
    ans.push_back("to_left_b | | 0 -> to_left_b | ^ | < 0 <");
    ans.push_back("to_left_b | _ 1 -> to_left_b | ^ _ < 1 <");
    ans.push_back("to_left_b | _ 0 -> to_left_b | ^ _ < 0 <");
    ans.push_back("to_left_b _ 1 1 -> to_left_b _ ^ 1 < 1 <");
    ans.push_back("to_left_b _ 1 0 -> to_left_b _ ^ 1 < 0 <");
    ans.push_back("to_left_b _ 0 1 -> to_left_b _ ^ 0 < 1 <");
    ans.push_back("to_left_b _ 0 0 -> to_left_b _ ^ 0 < 0 <");
    ans.push_back("to_left_b _ | 1 -> to_left_b _ ^ | < 1 <");
    ans.push_back("to_left_b _ | 0 -> to_left_b _ ^ | < 0 <");
    ans.push_back("to_left_b _ _ 1 -> to_left_b _ ^ _ < 1 <");
    ans.push_back("to_left_b _ _ 0 -> to_left_b _ ^ _ < 0 <");
    ans.push_back("to_left_b 1 _ _ -> comp 1 ^ _ > _ >");
    ans.push_back("to_left_b 0 _ _ -> comp 0 ^ _ > _ >");
    ans.push_back("to_left_b | _ _ -> comp | ^ _ > _ >");
    ans.push_back("to_left_b _ _ _ -> comp _ ^ _ > _ >");
    ans.push_back("to_left_b 1 1 _ -> comp 1 ^ 1 ^ _ ^");
    ans.push_back("to_left_b 1 0 _ -> comp 1 ^ 0 ^ _ ^");
    ans.push_back("to_left_b 0 1 _ -> comp 0 ^ 1 ^ _ ^");
    ans.push_back("to_left_b 0 0 _ -> comp 0 ^ 0 ^ _ ^");
    ans.push_back("to_left_b | 1 _ -> comp | ^ 1 ^ _ ^");
    ans.push_back("to_left_b | 0 _ -> comp | ^ 0 ^ _ ^");
    ans.push_back("to_left_b _ 1 _ -> comp _ ^ 1 ^ _ ^");
    ans.push_back("to_left_b _ 0 _ -> comp _ ^ 0 ^ _ ^");
    ans.push_back("comp 1 1 _ -> to_right 1 ^ 1 > _ >");
    ans.push_back("comp 1 1 0 -> to_right 1 ^ 1 > 0 >");
    ans.push_back("comp 0 1 _ -> to_right 0 ^ 1 > _ >");
    ans.push_back("comp 0 1 0 -> to_right 0 ^ 1 > 0 >");
    ans.push_back("comp | 1 _ -> to_right | ^ 1 > _ >");
    ans.push_back("comp | 1 0 -> to_right | ^ 1 > 0 >");
    ans.push_back("comp _ 1 _ -> to_right _ ^ 1 > _ >");
    ans.push_back("comp _ 1 0 -> to_right _ ^ 1 > 0 >");
    ans.push_back("to_right 1 1 1 -> to_right 1 ^ 1 > 1 >");
    ans.push_back("to_right 1 1 0 -> to_right 1 ^ 1 > 0 >");
    ans.push_back("to_right 1 0 1 -> to_right 1 ^ 0 > 1 >");
    ans.push_back("to_right 1 0 0 -> to_right 1 ^ 0 > 0 >");
    ans.push_back("to_right 0 1 1 -> to_right 0 ^ 1 > 1 >");
    ans.push_back("to_right 0 1 0 -> to_right 0 ^ 1 > 0 >");
    ans.push_back("to_right 0 0 1 -> to_right 0 ^ 0 > 1 >");
    ans.push_back("to_right 0 0 0 -> to_right 0 ^ 0 > 0 >");
    ans.push_back("to_right | 1 1 -> to_right | ^ 1 > 1 >");
    ans.push_back("to_right | 1 0 -> to_right | ^ 1 > 0 >");
    ans.push_back("to_right | 0 1 -> to_right | ^ 0 > 1 >");
    ans.push_back("to_right | 0 0 -> to_right | ^ 0 > 0 >");
    ans.push_back("to_right _ 1 1 -> to_right _ ^ 1 > 1 >");
    ans.push_back("to_right _ 1 0 -> to_right _ ^ 1 > 0 >");
    ans.push_back("to_right _ 0 1 -> to_right _ ^ 0 > 1 >");
    ans.push_back("to_right _ 0 0 -> to_right _ ^ 0 > 0 >");
    ans.push_back("to_right 1 1 _ -> to_right 1 ^ 1 > _ >");
    ans.push_back("to_right 1 0 _ -> to_right 1 ^ 0 > _ >");
    ans.push_back("to_right 0 1 _ -> to_right 0 ^ 1 > _ >");
    ans.push_back("to_right 0 0 _ -> to_right 0 ^ 0 > _ >");
    ans.push_back("to_right | 1 _ -> to_right | ^ 1 > _ >");
    ans.push_back("to_right | 0 _ -> to_right | ^ 0 > _ >");
    ans.push_back("to_right _ 1 _ -> to_right _ ^ 1 > _ >");
    ans.push_back("to_right _ 0 _ -> to_right _ ^ 0 > _ >");
    ans.push_back("to_right 1 _ 1 -> to_right 1 ^ _ > 1 >");
    ans.push_back("to_right 1 _ 0 -> to_right 1 ^ _ > 0 >");
    ans.push_back("to_right 0 _ 1 -> to_right 0 ^ _ > 1 >");
    ans.push_back("to_right 0 _ 0 -> to_right 0 ^ _ > 0 >");
    ans.push_back("to_right | _ 1 -> to_right | ^ _ > 1 >");
    ans.push_back("to_right | _ 0 -> to_right | ^ _ > 0 >");
    ans.push_back("to_right _ _ 1 -> to_right _ ^ _ > 1 >");
    ans.push_back("to_right _ _ 0 -> to_right _ ^ _ > 0 >");
    ans.push_back("to_right 1 _ _ -> write_back_a 1 ^ _ < _ <");
    ans.push_back("to_right 0 _ _ -> write_back_a 0 ^ _ < _ <");
    ans.push_back("to_right | _ _ -> write_back_a | ^ _ < _ <");
    ans.push_back("to_right _ _ _ -> write_back_a _ ^ _ < _ <");
    ans.push_back("write_back_a 1 0 1 -> write_back_a 0 < _ < 1 ^");
    ans.push_back("write_back_a 1 0 0 -> write_back_a 0 < _ < 0 ^");
    ans.push_back("write_back_a 1 0 | -> write_back_a 0 < _ < | ^");
    ans.push_back("write_back_a 1 0 _ -> write_back_a 0 < _ < _ ^");
    ans.push_back("write_back_a 0 0 1 -> write_back_a 0 < _ < 1 ^");
    ans.push_back("write_back_a 0 0 0 -> write_back_a 0 < _ < 0 ^");
    ans.push_back("write_back_a 0 0 | -> write_back_a 0 < _ < | ^");
    ans.push_back("write_back_a 0 0 _ -> write_back_a 0 < _ < _ ^");
    ans.push_back("write_back_a | 0 1 -> write_back_a 0 < _ < 1 ^");
    ans.push_back("write_back_a | 0 0 -> write_back_a 0 < _ < 0 ^");
    ans.push_back("write_back_a | 0 | -> write_back_a 0 < _ < | ^");
    ans.push_back("write_back_a | 0 _ -> write_back_a 0 < _ < _ ^");
    ans.push_back("write_back_a _ 0 1 -> write_back_a 0 < _ < 1 ^");
    ans.push_back("write_back_a _ 0 0 -> write_back_a 0 < _ < 0 ^");
    ans.push_back("write_back_a _ 0 | -> write_back_a 0 < _ < | ^");
    ans.push_back("write_back_a _ 0 _ -> write_back_a 0 < _ < _ ^");
    ans.push_back("write_back_a 1 1 1 -> write_back_a 1 < _ < 1 ^");
    ans.push_back("write_back_a 1 1 0 -> write_back_a 1 < _ < 0 ^");
    ans.push_back("write_back_a 1 1 | -> write_back_a 1 < _ < | ^");
    ans.push_back("write_back_a 1 1 _ -> write_back_a 1 < _ < _ ^");
    ans.push_back("write_back_a 0 1 1 -> write_back_a 1 < _ < 1 ^");
    ans.push_back("write_back_a 0 1 0 -> write_back_a 1 < _ < 0 ^");
    ans.push_back("write_back_a 0 1 | -> write_back_a 1 < _ < | ^");
    ans.push_back("write_back_a 0 1 _ -> write_back_a 1 < _ < _ ^");
    ans.push_back("write_back_a | 1 1 -> write_back_a 1 < _ < 1 ^");
    ans.push_back("write_back_a | 1 0 -> write_back_a 1 < _ < 0 ^");
    ans.push_back("write_back_a | 1 | -> write_back_a 1 < _ < | ^");
    ans.push_back("write_back_a | 1 _ -> write_back_a 1 < _ < _ ^");
    ans.push_back("write_back_a _ 1 1 -> write_back_a 1 < _ < 1 ^");
    ans.push_back("write_back_a _ 1 0 -> write_back_a 1 < _ < 0 ^");
    ans.push_back("write_back_a _ 1 | -> write_back_a 1 < _ < | ^");
    ans.push_back("write_back_a _ 1 _ -> write_back_a 1 < _ < _ ^");
    ans.push_back("write_back_a 1 _ 1 -> write_back_b | < _ ^ 1 ^");
    ans.push_back("write_back_a 1 _ 0 -> write_back_b | < _ ^ 0 ^");
    ans.push_back("write_back_a 1 _ | -> write_back_b | < _ ^ | ^");
    ans.push_back("write_back_a 1 _ _ -> write_back_b | < _ ^ _ ^");
    ans.push_back("write_back_a 0 _ 1 -> write_back_b | < _ ^ 1 ^");
    ans.push_back("write_back_a 0 _ 0 -> write_back_b | < _ ^ 0 ^");
    ans.push_back("write_back_a 0 _ | -> write_back_b | < _ ^ | ^");
    ans.push_back("write_back_a 0 _ _ -> write_back_b | < _ ^ _ ^");
    ans.push_back("write_back_a | _ 1 -> write_back_b | < _ ^ 1 ^");
    ans.push_back("write_back_a | _ 0 -> write_back_b | < _ ^ 0 ^");
    ans.push_back("write_back_a | _ | -> write_back_b | < _ ^ | ^");
    ans.push_back("write_back_a | _ _ -> write_back_b | < _ ^ _ ^");
    ans.push_back("write_back_a _ _ 1 -> write_back_b | < _ ^ 1 ^");
    ans.push_back("write_back_a _ _ 0 -> write_back_b | < _ ^ 0 ^");
    ans.push_back("write_back_a _ _ | -> write_back_b | < _ ^ | ^");
    ans.push_back("write_back_a _ _ _ -> write_back_b | < _ ^ _ ^");
    ans.push_back("write_back_b 1 1 0 -> write_back_b 0 < 1 ^ _ <");
    ans.push_back("write_back_b 1 0 0 -> write_back_b 0 < 0 ^ _ <");
    ans.push_back("write_back_b 1 | 0 -> write_back_b 0 < | ^ _ <");
    ans.push_back("write_back_b 1 _ 0 -> write_back_b 0 < _ ^ _ <");
    ans.push_back("write_back_b 0 1 0 -> write_back_b 0 < 1 ^ _ <");
    ans.push_back("write_back_b 0 0 0 -> write_back_b 0 < 0 ^ _ <");
    ans.push_back("write_back_b 0 | 0 -> write_back_b 0 < | ^ _ <");
    ans.push_back("write_back_b 0 _ 0 -> write_back_b 0 < _ ^ _ <");
    ans.push_back("write_back_b | 1 0 -> write_back_b 0 < 1 ^ _ <");
    ans.push_back("write_back_b | 0 0 -> write_back_b 0 < 0 ^ _ <");
    ans.push_back("write_back_b | | 0 -> write_back_b 0 < | ^ _ <");
    ans.push_back("write_back_b | _ 0 -> write_back_b 0 < _ ^ _ <");
    ans.push_back("write_back_b _ 1 0 -> write_back_b 0 < 1 ^ _ <");
    ans.push_back("write_back_b _ 0 0 -> write_back_b 0 < 0 ^ _ <");
    ans.push_back("write_back_b _ | 0 -> write_back_b 0 < | ^ _ <");
    ans.push_back("write_back_b _ _ 0 -> write_back_b 0 < _ ^ _ <");
    ans.push_back("write_back_b 1 1 1 -> write_back_b 1 < 1 ^ _ <");
    ans.push_back("write_back_b 1 0 1 -> write_back_b 1 < 0 ^ _ <");
    ans.push_back("write_back_b 1 | 1 -> write_back_b 1 < | ^ _ <");
    ans.push_back("write_back_b 1 _ 1 -> write_back_b 1 < _ ^ _ <");
    ans.push_back("write_back_b 0 1 1 -> write_back_b 1 < 1 ^ _ <");
    ans.push_back("write_back_b 0 0 1 -> write_back_b 1 < 0 ^ _ <");
    ans.push_back("write_back_b 0 | 1 -> write_back_b 1 < | ^ _ <");
    ans.push_back("write_back_b 0 _ 1 -> write_back_b 1 < _ ^ _ <");
    ans.push_back("write_back_b | 1 1 -> write_back_b 1 < 1 ^ _ <");
    ans.push_back("write_back_b | 0 1 -> write_back_b 1 < 0 ^ _ <");
    ans.push_back("write_back_b | | 1 -> write_back_b 1 < | ^ _ <");
    ans.push_back("write_back_b | _ 1 -> write_back_b 1 < _ ^ _ <");
    ans.push_back("write_back_b _ 1 1 -> write_back_b 1 < 1 ^ _ <");
    ans.push_back("write_back_b _ 0 1 -> write_back_b 1 < 0 ^ _ <");
    ans.push_back("write_back_b _ | 1 -> write_back_b 1 < | ^ _ <");
    ans.push_back("write_back_b _ _ 1 -> write_back_b 1 < _ ^ _ <");
    ans.push_back("write_back_b 1 1 _ -> to_left_arr 1 ^ 1 ^ _ ^");
    ans.push_back("write_back_b 1 0 _ -> to_left_arr 1 ^ 0 ^ _ ^");
    ans.push_back("write_back_b 1 | _ -> to_left_arr 1 ^ | ^ _ ^");
    ans.push_back("write_back_b 1 _ _ -> to_left_arr 1 ^ _ ^ _ ^");
    ans.push_back("write_back_b 0 1 _ -> to_left_arr 0 ^ 1 ^ _ ^");
    ans.push_back("write_back_b 0 0 _ -> to_left_arr 0 ^ 0 ^ _ ^");
    ans.push_back("write_back_b 0 | _ -> to_left_arr 0 ^ | ^ _ ^");
    ans.push_back("write_back_b 0 _ _ -> to_left_arr 0 ^ _ ^ _ ^");
    ans.push_back("write_back_b | 1 _ -> to_left_arr | ^ 1 ^ _ ^");
    ans.push_back("write_back_b | 0 _ -> to_left_arr | ^ 0 ^ _ ^");
    ans.push_back("write_back_b | | _ -> to_left_arr | ^ | ^ _ ^");
    ans.push_back("write_back_b | _ _ -> to_left_arr | ^ _ ^ _ ^");
    ans.push_back("write_back_b _ 1 _ -> to_left_arr _ ^ 1 ^ _ ^");
    ans.push_back("write_back_b _ 0 _ -> to_left_arr _ ^ 0 ^ _ ^");
    ans.push_back("write_back_b _ | _ -> to_left_arr _ ^ | ^ _ ^");
    ans.push_back("write_back_b _ _ _ -> to_left_arr _ ^ _ ^ _ ^");
    ans.push_back("to_left_arr 1 1 1 -> to_left_arr 1 < 1 ^ 1 ^");
    ans.push_back("to_left_arr 1 1 0 -> to_left_arr 1 < 1 ^ 0 ^");
    ans.push_back("to_left_arr 1 1 | -> to_left_arr 1 < 1 ^ | ^");
    ans.push_back("to_left_arr 1 1 _ -> to_left_arr 1 < 1 ^ _ ^");
    ans.push_back("to_left_arr 1 0 1 -> to_left_arr 1 < 0 ^ 1 ^");
    ans.push_back("to_left_arr 1 0 0 -> to_left_arr 1 < 0 ^ 0 ^");
    ans.push_back("to_left_arr 1 0 | -> to_left_arr 1 < 0 ^ | ^");
    ans.push_back("to_left_arr 1 0 _ -> to_left_arr 1 < 0 ^ _ ^");
    ans.push_back("to_left_arr 1 | 1 -> to_left_arr 1 < | ^ 1 ^");
    ans.push_back("to_left_arr 1 | 0 -> to_left_arr 1 < | ^ 0 ^");
    ans.push_back("to_left_arr 1 | | -> to_left_arr 1 < | ^ | ^");
    ans.push_back("to_left_arr 1 | _ -> to_left_arr 1 < | ^ _ ^");
    ans.push_back("to_left_arr 1 _ 1 -> to_left_arr 1 < _ ^ 1 ^");
    ans.push_back("to_left_arr 1 _ 0 -> to_left_arr 1 < _ ^ 0 ^");
    ans.push_back("to_left_arr 1 _ | -> to_left_arr 1 < _ ^ | ^");
    ans.push_back("to_left_arr 1 _ _ -> to_left_arr 1 < _ ^ _ ^");
    ans.push_back("to_left_arr 0 1 1 -> to_left_arr 0 < 1 ^ 1 ^");
    ans.push_back("to_left_arr 0 1 0 -> to_left_arr 0 < 1 ^ 0 ^");
    ans.push_back("to_left_arr 0 1 | -> to_left_arr 0 < 1 ^ | ^");
    ans.push_back("to_left_arr 0 1 _ -> to_left_arr 0 < 1 ^ _ ^");
    ans.push_back("to_left_arr 0 0 1 -> to_left_arr 0 < 0 ^ 1 ^");
    ans.push_back("to_left_arr 0 0 0 -> to_left_arr 0 < 0 ^ 0 ^");
    ans.push_back("to_left_arr 0 0 | -> to_left_arr 0 < 0 ^ | ^");
    ans.push_back("to_left_arr 0 0 _ -> to_left_arr 0 < 0 ^ _ ^");
    ans.push_back("to_left_arr 0 | 1 -> to_left_arr 0 < | ^ 1 ^");
    ans.push_back("to_left_arr 0 | 0 -> to_left_arr 0 < | ^ 0 ^");
    ans.push_back("to_left_arr 0 | | -> to_left_arr 0 < | ^ | ^");
    ans.push_back("to_left_arr 0 | _ -> to_left_arr 0 < | ^ _ ^");
    ans.push_back("to_left_arr 0 _ 1 -> to_left_arr 0 < _ ^ 1 ^");
    ans.push_back("to_left_arr 0 _ 0 -> to_left_arr 0 < _ ^ 0 ^");
    ans.push_back("to_left_arr 0 _ | -> to_left_arr 0 < _ ^ | ^");
    ans.push_back("to_left_arr 0 _ _ -> to_left_arr 0 < _ ^ _ ^");
    ans.push_back("to_left_arr | 1 1 -> to_left_arr | < 1 ^ 1 ^");
    ans.push_back("to_left_arr | 1 0 -> to_left_arr | < 1 ^ 0 ^");
    ans.push_back("to_left_arr | 1 | -> to_left_arr | < 1 ^ | ^");
    ans.push_back("to_left_arr | 1 _ -> to_left_arr | < 1 ^ _ ^");
    ans.push_back("to_left_arr | 0 1 -> to_left_arr | < 0 ^ 1 ^");
    ans.push_back("to_left_arr | 0 0 -> to_left_arr | < 0 ^ 0 ^");
    ans.push_back("to_left_arr | 0 | -> to_left_arr | < 0 ^ | ^");
    ans.push_back("to_left_arr | 0 _ -> to_left_arr | < 0 ^ _ ^");
    ans.push_back("to_left_arr | | 1 -> to_left_arr | < | ^ 1 ^");
    ans.push_back("to_left_arr | | 0 -> to_left_arr | < | ^ 0 ^");
    ans.push_back("to_left_arr | | | -> to_left_arr | < | ^ | ^");
    ans.push_back("to_left_arr | | _ -> to_left_arr | < | ^ _ ^");
    ans.push_back("to_left_arr | _ 1 -> to_left_arr | < _ ^ 1 ^");
    ans.push_back("to_left_arr | _ 0 -> to_left_arr | < _ ^ 0 ^");
    ans.push_back("to_left_arr | _ | -> to_left_arr | < _ ^ | ^");
    ans.push_back("to_left_arr | _ _ -> to_left_arr | < _ ^ _ ^");
    ans.push_back("to_left_arr _ 1 1 -> S _ > 1 ^ 1 ^");
    ans.push_back("to_left_arr _ 1 0 -> S _ > 1 ^ 0 ^");
    ans.push_back("to_left_arr _ 1 | -> S _ > 1 ^ | ^");
    ans.push_back("to_left_arr _ 1 _ -> S _ > 1 ^ _ ^");
    ans.push_back("to_left_arr _ 0 1 -> S _ > 0 ^ 1 ^");
    ans.push_back("to_left_arr _ 0 0 -> S _ > 0 ^ 0 ^");
    ans.push_back("to_left_arr _ 0 | -> S _ > 0 ^ | ^");
    ans.push_back("to_left_arr _ 0 _ -> S _ > 0 ^ _ ^");
    ans.push_back("to_left_arr _ | 1 -> S _ > | ^ 1 ^");
    ans.push_back("to_left_arr _ | 0 -> S _ > | ^ 0 ^");
    ans.push_back("to_left_arr _ | | -> S _ > | ^ | ^");
    ans.push_back("to_left_arr _ | _ -> S _ > | ^ _ ^");
    ans.push_back("to_left_arr _ _ 1 -> S _ > _ ^ 1 ^");
    ans.push_back("to_left_arr _ _ 0 -> S _ > _ ^ 0 ^");
    ans.push_back("to_left_arr _ _ | -> S _ > _ ^ | ^");
    ans.push_back("to_left_arr _ _ _ -> S _ > _ ^ _ ^");
    ans.push_back("comp 1 _ 1 -> clean_ab 1 ^ _ ^ 1 ^");
    ans.push_back("comp 1 0 1 -> clean_ab 1 ^ 0 ^ 1 ^");
    ans.push_back("comp 0 _ 1 -> clean_ab 0 ^ _ ^ 1 ^");
    ans.push_back("comp 0 0 1 -> clean_ab 0 ^ 0 ^ 1 ^");
    ans.push_back("comp | _ 1 -> clean_ab | ^ _ ^ 1 ^");
    ans.push_back("comp | 0 1 -> clean_ab | ^ 0 ^ 1 ^");
    ans.push_back("comp _ _ 1 -> clean_ab _ ^ _ ^ 1 ^");
    ans.push_back("comp _ 0 1 -> clean_ab _ ^ 0 ^ 1 ^");
    ans.push_back("clean_ab 1 1 1 -> clean_ab 1 ^ 1 > 1 >");
    ans.push_back("clean_ab 1 1 0 -> clean_ab 1 ^ 1 > 0 >");
    ans.push_back("clean_ab 1 0 1 -> clean_ab 1 ^ 0 > 1 >");
    ans.push_back("clean_ab 1 0 0 -> clean_ab 1 ^ 0 > 0 >");
    ans.push_back("clean_ab 0 1 1 -> clean_ab 0 ^ 1 > 1 >");
    ans.push_back("clean_ab 0 1 0 -> clean_ab 0 ^ 1 > 0 >");
    ans.push_back("clean_ab 0 0 1 -> clean_ab 0 ^ 0 > 1 >");
    ans.push_back("clean_ab 0 0 0 -> clean_ab 0 ^ 0 > 0 >");
    ans.push_back("clean_ab | 1 1 -> clean_ab | ^ 1 > 1 >");
    ans.push_back("clean_ab | 1 0 -> clean_ab | ^ 1 > 0 >");
    ans.push_back("clean_ab | 0 1 -> clean_ab | ^ 0 > 1 >");
    ans.push_back("clean_ab | 0 0 -> clean_ab | ^ 0 > 0 >");
    ans.push_back("clean_ab _ 1 1 -> clean_ab _ ^ 1 > 1 >");
    ans.push_back("clean_ab _ 1 0 -> clean_ab _ ^ 1 > 0 >");
    ans.push_back("clean_ab _ 0 1 -> clean_ab _ ^ 0 > 1 >");
    ans.push_back("clean_ab _ 0 0 -> clean_ab _ ^ 0 > 0 >");
    ans.push_back("clean_ab 1 1 _ -> clean_ab 1 ^ 1 > _ >");
    ans.push_back("clean_ab 1 0 _ -> clean_ab 1 ^ 0 > _ >");
    ans.push_back("clean_ab 0 1 _ -> clean_ab 0 ^ 1 > _ >");
    ans.push_back("clean_ab 0 0 _ -> clean_ab 0 ^ 0 > _ >");
    ans.push_back("clean_ab | 1 _ -> clean_ab | ^ 1 > _ >");
    ans.push_back("clean_ab | 0 _ -> clean_ab | ^ 0 > _ >");
    ans.push_back("clean_ab _ 1 _ -> clean_ab _ ^ 1 > _ >");
    ans.push_back("clean_ab _ 0 _ -> clean_ab _ ^ 0 > _ >");
    ans.push_back("clean_ab 1 _ 1 -> clean_ab 1 ^ _ > 1 >");
    ans.push_back("clean_ab 1 _ 0 -> clean_ab 1 ^ _ > 0 >");
    ans.push_back("clean_ab 0 _ 1 -> clean_ab 0 ^ _ > 1 >");
    ans.push_back("clean_ab 0 _ 0 -> clean_ab 0 ^ _ > 0 >");
    ans.push_back("clean_ab | _ 1 -> clean_ab | ^ _ > 1 >");
    ans.push_back("clean_ab | _ 0 -> clean_ab | ^ _ > 0 >");
    ans.push_back("clean_ab _ _ 1 -> clean_ab _ ^ _ > 1 >");
    ans.push_back("clean_ab _ _ 0 -> clean_ab _ ^ _ > 0 >");
    ans.push_back("clean_ab 1 _ _ -> clean_ab_back 1 ^ _ < _ <");
    ans.push_back("clean_ab 0 _ _ -> clean_ab_back 0 ^ _ < _ <");
    ans.push_back("clean_ab | _ _ -> clean_ab_back | ^ _ < _ <");
    ans.push_back("clean_ab _ _ _ -> clean_ab_back _ ^ _ < _ <");
    ans.push_back("clean_ab_back 1 1 1 -> clean_ab_back 1 ^ _ < _ <");
    ans.push_back("clean_ab_back 1 1 0 -> clean_ab_back 1 ^ _ < _ <");
    ans.push_back("clean_ab_back 1 0 1 -> clean_ab_back 1 ^ _ < _ <");
    ans.push_back("clean_ab_back 1 0 0 -> clean_ab_back 1 ^ _ < _ <");
    ans.push_back("clean_ab_back 0 1 1 -> clean_ab_back 0 ^ _ < _ <");
    ans.push_back("clean_ab_back 0 1 0 -> clean_ab_back 0 ^ _ < _ <");
    ans.push_back("clean_ab_back 0 0 1 -> clean_ab_back 0 ^ _ < _ <");
    ans.push_back("clean_ab_back 0 0 0 -> clean_ab_back 0 ^ _ < _ <");
    ans.push_back("clean_ab_back | 1 1 -> clean_ab_back | ^ _ < _ <");
    ans.push_back("clean_ab_back | 1 0 -> clean_ab_back | ^ _ < _ <");
    ans.push_back("clean_ab_back | 0 1 -> clean_ab_back | ^ _ < _ <");
    ans.push_back("clean_ab_back | 0 0 -> clean_ab_back | ^ _ < _ <");
    ans.push_back("clean_ab_back _ 1 1 -> clean_ab_back _ ^ _ < _ <");
    ans.push_back("clean_ab_back _ 1 0 -> clean_ab_back _ ^ _ < _ <");
    ans.push_back("clean_ab_back _ 0 1 -> clean_ab_back _ ^ _ < _ <");
    ans.push_back("clean_ab_back _ 0 0 -> clean_ab_back _ ^ _ < _ <");
    ans.push_back("clean_ab_back 1 1 _ -> clean_ab_back 1 ^ _ < _ <");
    ans.push_back("clean_ab_back 1 0 _ -> clean_ab_back 1 ^ _ < _ <");
    ans.push_back("clean_ab_back 0 1 _ -> clean_ab_back 0 ^ _ < _ <");
    ans.push_back("clean_ab_back 0 0 _ -> clean_ab_back 0 ^ _ < _ <");
    ans.push_back("clean_ab_back | 1 _ -> clean_ab_back | ^ _ < _ <");
    ans.push_back("clean_ab_back | 0 _ -> clean_ab_back | ^ _ < _ <");
    ans.push_back("clean_ab_back _ 1 _ -> clean_ab_back _ ^ _ < _ <");
    ans.push_back("clean_ab_back _ 0 _ -> clean_ab_back _ ^ _ < _ <");
    ans.push_back("clean_ab_back 1 _ 1 -> clean_ab_back 1 ^ _ < _ <");
    ans.push_back("clean_ab_back 1 _ 0 -> clean_ab_back 1 ^ _ < _ <");
    ans.push_back("clean_ab_back 0 _ 1 -> clean_ab_back 0 ^ _ < _ <");
    ans.push_back("clean_ab_back 0 _ 0 -> clean_ab_back 0 ^ _ < _ <");
    ans.push_back("clean_ab_back | _ 1 -> clean_ab_back | ^ _ < _ <");
    ans.push_back("clean_ab_back | _ 0 -> clean_ab_back | ^ _ < _ <");
    ans.push_back("clean_ab_back _ _ 1 -> clean_ab_back _ ^ _ < _ <");
    ans.push_back("clean_ab_back _ _ 0 -> clean_ab_back _ ^ _ < _ <");
    ans.push_back("clean_ab_back 1 _ _ -> to_prev_arr 1 ^ _ ^ _ ^");
    ans.push_back("clean_ab_back 0 _ _ -> to_prev_arr 0 ^ _ ^ _ ^");
    ans.push_back("clean_ab_back | _ _ -> to_prev_arr | ^ _ ^ _ ^");
    ans.push_back("clean_ab_back _ _ _ -> to_prev_arr _ ^ _ ^ _ ^");
    ans.push_back("comp 1 1 1 -> comp 1 ^ 1 > 1 >");
    ans.push_back("comp 0 1 1 -> comp 0 ^ 1 > 1 >");
    ans.push_back("comp | 1 1 -> comp | ^ 1 > 1 >");
    ans.push_back("comp _ 1 1 -> comp _ ^ 1 > 1 >");
    ans.push_back("comp 1 _ 0 -> comp 1 ^ _ > 0 >");
    ans.push_back("comp 1 0 0 -> comp 1 ^ 0 > 0 >");
    ans.push_back("comp 0 _ 0 -> comp 0 ^ _ > 0 >");
    ans.push_back("comp 0 0 0 -> comp 0 ^ 0 > 0 >");
    ans.push_back("comp | _ 0 -> comp | ^ _ > 0 >");
    ans.push_back("comp | 0 0 -> comp | ^ 0 > 0 >");
    ans.push_back("comp _ _ 0 -> comp _ ^ _ > 0 >");
    ans.push_back("comp _ 0 0 -> comp _ ^ 0 > 0 >");
    ans.push_back("comp 1 0 _ -> comp 1 ^ 0 > _ >");
    ans.push_back("comp 1 0 0 -> comp 1 ^ 0 > 0 >");
    ans.push_back("comp 0 0 _ -> comp 0 ^ 0 > _ >");
    ans.push_back("comp 0 0 0 -> comp 0 ^ 0 > 0 >");
    ans.push_back("comp | 0 _ -> comp | ^ 0 > _ >");
    ans.push_back("comp | 0 0 -> comp | ^ 0 > 0 >");
    ans.push_back("comp _ 0 _ -> comp _ ^ 0 > _ >");
    ans.push_back("comp _ 0 0 -> comp _ ^ 0 > 0 >");
    ans.push_back("comp 1 _ _ -> clean_ab_back 1 ^ _ < _ <");
    ans.push_back("comp 0 _ _ -> clean_ab_back 0 ^ _ < _ <");
    ans.push_back("comp | _ _ -> clean_ab_back | ^ _ < _ <");
    ans.push_back("comp _ _ _ -> clean_ab_back _ ^ _ < _ <");
    ans.push_back("to_prev_arr 1 1 1 -> to_prev_arr 1 < 1 ^ 1 ^");
    ans.push_back("to_prev_arr 1 1 0 -> to_prev_arr 1 < 1 ^ 0 ^");
    ans.push_back("to_prev_arr 1 1 | -> to_prev_arr 1 < 1 ^ | ^");
    ans.push_back("to_prev_arr 1 1 _ -> to_prev_arr 1 < 1 ^ _ ^");
    ans.push_back("to_prev_arr 1 0 1 -> to_prev_arr 1 < 0 ^ 1 ^");
    ans.push_back("to_prev_arr 1 0 0 -> to_prev_arr 1 < 0 ^ 0 ^");
    ans.push_back("to_prev_arr 1 0 | -> to_prev_arr 1 < 0 ^ | ^");
    ans.push_back("to_prev_arr 1 0 _ -> to_prev_arr 1 < 0 ^ _ ^");
    ans.push_back("to_prev_arr 1 | 1 -> to_prev_arr 1 < | ^ 1 ^");
    ans.push_back("to_prev_arr 1 | 0 -> to_prev_arr 1 < | ^ 0 ^");
    ans.push_back("to_prev_arr 1 | | -> to_prev_arr 1 < | ^ | ^");
    ans.push_back("to_prev_arr 1 | _ -> to_prev_arr 1 < | ^ _ ^");
    ans.push_back("to_prev_arr 1 _ 1 -> to_prev_arr 1 < _ ^ 1 ^");
    ans.push_back("to_prev_arr 1 _ 0 -> to_prev_arr 1 < _ ^ 0 ^");
    ans.push_back("to_prev_arr 1 _ | -> to_prev_arr 1 < _ ^ | ^");
    ans.push_back("to_prev_arr 1 _ _ -> to_prev_arr 1 < _ ^ _ ^");
    ans.push_back("to_prev_arr 0 1 1 -> to_prev_arr 0 < 1 ^ 1 ^");
    ans.push_back("to_prev_arr 0 1 0 -> to_prev_arr 0 < 1 ^ 0 ^");
    ans.push_back("to_prev_arr 0 1 | -> to_prev_arr 0 < 1 ^ | ^");
    ans.push_back("to_prev_arr 0 1 _ -> to_prev_arr 0 < 1 ^ _ ^");
    ans.push_back("to_prev_arr 0 0 1 -> to_prev_arr 0 < 0 ^ 1 ^");
    ans.push_back("to_prev_arr 0 0 0 -> to_prev_arr 0 < 0 ^ 0 ^");
    ans.push_back("to_prev_arr 0 0 | -> to_prev_arr 0 < 0 ^ | ^");
    ans.push_back("to_prev_arr 0 0 _ -> to_prev_arr 0 < 0 ^ _ ^");
    ans.push_back("to_prev_arr 0 | 1 -> to_prev_arr 0 < | ^ 1 ^");
    ans.push_back("to_prev_arr 0 | 0 -> to_prev_arr 0 < | ^ 0 ^");
    ans.push_back("to_prev_arr 0 | | -> to_prev_arr 0 < | ^ | ^");
    ans.push_back("to_prev_arr 0 | _ -> to_prev_arr 0 < | ^ _ ^");
    ans.push_back("to_prev_arr 0 _ 1 -> to_prev_arr 0 < _ ^ 1 ^");
    ans.push_back("to_prev_arr 0 _ 0 -> to_prev_arr 0 < _ ^ 0 ^");
    ans.push_back("to_prev_arr 0 _ | -> to_prev_arr 0 < _ ^ | ^");
    ans.push_back("to_prev_arr 0 _ _ -> to_prev_arr 0 < _ ^ _ ^");
    ans.push_back("to_prev_arr _ 1 1 -> S _ > 1 ^ 1 ^");
    ans.push_back("to_prev_arr _ 1 0 -> S _ > 1 ^ 0 ^");
    ans.push_back("to_prev_arr _ 1 | -> S _ > 1 ^ | ^");
    ans.push_back("to_prev_arr _ 1 _ -> S _ > 1 ^ _ ^");
    ans.push_back("to_prev_arr _ 0 1 -> S _ > 0 ^ 1 ^");
    ans.push_back("to_prev_arr _ 0 0 -> S _ > 0 ^ 0 ^");
    ans.push_back("to_prev_arr _ 0 | -> S _ > 0 ^ | ^");
    ans.push_back("to_prev_arr _ 0 _ -> S _ > 0 ^ _ ^");
    ans.push_back("to_prev_arr _ | 1 -> S _ > | ^ 1 ^");
    ans.push_back("to_prev_arr _ | 0 -> S _ > | ^ 0 ^");
    ans.push_back("to_prev_arr _ | | -> S _ > | ^ | ^");
    ans.push_back("to_prev_arr _ | _ -> S _ > | ^ _ ^");
    ans.push_back("to_prev_arr _ _ 1 -> S _ > _ ^ 1 ^");
    ans.push_back("to_prev_arr _ _ 0 -> S _ > _ ^ 0 ^");
    ans.push_back("to_prev_arr _ _ | -> S _ > _ ^ | ^");
    ans.push_back("to_prev_arr _ _ _ -> S _ > _ ^ _ ^");
    ans.push_back("to_prev_arr | 1 1 -> S | > 1 ^ 1 ^");
    ans.push_back("to_prev_arr | 1 0 -> S | > 1 ^ 0 ^");
    ans.push_back("to_prev_arr | 1 | -> S | > 1 ^ | ^");
    ans.push_back("to_prev_arr | 1 _ -> S | > 1 ^ _ ^");
    ans.push_back("to_prev_arr | 0 1 -> S | > 0 ^ 1 ^");
    ans.push_back("to_prev_arr | 0 0 -> S | > 0 ^ 0 ^");
    ans.push_back("to_prev_arr | 0 | -> S | > 0 ^ | ^");
    ans.push_back("to_prev_arr | 0 _ -> S | > 0 ^ _ ^");
    ans.push_back("to_prev_arr | | 1 -> S | > | ^ 1 ^");
    ans.push_back("to_prev_arr | | 0 -> S | > | ^ 0 ^");
    ans.push_back("to_prev_arr | | | -> S | > | ^ | ^");
    ans.push_back("to_prev_arr | | _ -> S | > | ^ _ ^");
    ans.push_back("to_prev_arr | _ 1 -> S | > _ ^ 1 ^");
    ans.push_back("to_prev_arr | _ 0 -> S | > _ ^ 0 ^");
    ans.push_back("to_prev_arr | _ | -> S | > _ ^ | ^");
    ans.push_back("to_prev_arr | _ _ -> S | > _ ^ _ ^");
    for (size_t i = 0; i < ans.size(); ++i) {
        cout << ans[i] << endl;
    }
    return 0;
}
